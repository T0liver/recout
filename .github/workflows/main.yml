name: Build and Release
on:
  pull_request:
    branches:
      - release
  push:
    branches:
      - release

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build_android:
    name: Build to Android
    runs-on: ubuntu-latest

    steps:
      # checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # setup java java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      # setup flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      # install dependecies
      - name: Install Dependencies
        run: flutter pub get

      # setup keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      # APKing
      - name: Build APK
        run: flutter build apk --release

      # bundeling
      - name: Build appBundle
        run: flutter build appbundle

      # upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
         name: android_release
         path: |
           build/app/outputs/flutter-apk/app-release.apk
           build/app/outputs/bundle/release/app-release.aab

#  build_ios:
#    name: Build iOS
#    runs-on: macos-latest
#    steps:
#      # checkout repo
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      # setup java java
#      - name: Set Up Java
#        uses: actions/setup-java@v3.12.0
#        with:
#          distribution: 'oracle'
#          java-version: '17'
#
#      # setup flutter
#      - name: Set Up Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.32.0'
#          channel: 'stable'
#
#      # install dependecies
#      - name: Install Dependencies
#        run: flutter pub get
#
#      # auto-patch the ifos target
#      - name: Set iOS Deployment Target to 13.0
#        run: |
#          sed -i '' "s/^#\? *platform :ios, .*/platform :ios, '13.0'/" ios/Podfile
#
#      # build for ifos
#      - name: Build IPA
#        run: flutter build ipa --no-codesign
#
#      # compressing ios thing or whatever
#      - name: Compress Archives and IPAs
#       run: |
#         cd build
#         tar -czf ios_build.tar.gz ios
#
#      # upload artifacts
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: ios_release
#          path: |
#            build/ios_build.tar.gz

  build_web:
    name: Build web
    runs-on: ubuntu-latest
    steps:
      # checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # getting flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: 3.32.0

      # resolving dependencies
      - name: Flutter get pub!
        run: flutter pub get

      # noew enabling weab  | getting there
      - name: Flutter enable web!
        run: flutter config --enable-web

      # buildiiing!         | and here we goooo
      - name: Flutter build web!
        run: flutter build web

      # archive artifact
      - name: Archive Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

      # launch the rocket to the infinity and beyooond
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          channelId: ${{ github.event_name == 'pull_request' && 'preview' || 'live' }}
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_RECOUT_13B03 }}
          projectId: recout-13b03
          expires: 2d

  release:
    name: Create release and release
    runs-on: ubuntu-latest
    needs:
      - build_android
      # - build_ios
    if: ${{ github.event_name }}" == "push"
    steps:
      # checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # extracting version number
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      # checking version number and modifying if so
      - name: Check if Tag Exists and Modify
        id: f_tag
        run: |
          git fetch
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
            new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
            echo "VERSION=$new_version" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      # downloading the... you know... things...
      - name: Download android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android_release
          path: ./

#      - name: Download iOS artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: ios_release
#          path: ./

      # rename this to don't be soooo boring
      - name: Rename Artifacts
        run: |
          mv flutter-apk/app-release.apk recout-v${{ env.VERSION }}.apk
          mv bundle/release/app-release.aab recout-v${{ env.VERSION }}.aab
#          mv ios_build.tar.gz recout-v${{ env.VERSION }}_ios.tar.gz

      # releasing!!
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
#          artifacts: "recout-v${{ env.VERSION }}.apk,recout-v${{ env.VERSION }}.aab,recout-v${{ env.VERSION }}_ios.tar.gz"
          artifacts: "recout-v${{ env.VERSION }}.apk,recout-v${{ env.VERSION }}.aab"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}
